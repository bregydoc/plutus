{
  "version": 3,
  "file": "bundle.css",
  "sources": [
    "../src/routes/_layout.svelte",
    "../src/routes/_error.svelte",
    "../src/routes/index.svelte",
    "../src/routes/blog/index.svelte",
    "../src/routes/blog/[slug].svelte"
  ],
  "sourcesContent": [
    "<script>\n  export let segment;\n  import \"../styles.css\";\n</script>\n\n<style>\n  main {\n    position: relative;\n    max-width: 56em;\n    background-color: white;\n    padding: 2em;\n    margin: 0 auto;\n    box-sizing: border-box;\n  }\n</style>\n\n<!-- <Nav {segment}/> -->\n\n<main>\n  <slot />\n</main>\n",
    "<script>\n\texport let status;\n\texport let error;\n\n\tconst dev = \"development\" === 'development';\n</script>\n\n<style>\n\th1, p {\n\t\tmargin: 0 auto;\n\t}\n\n\th1 {\n\t\tfont-size: 2.8em;\n\t\tfont-weight: 700;\n\t\tmargin: 0 0 0.5em 0;\n\t}\n\n\tp {\n\t\tmargin: 1em auto;\n\t}\n\n\t@media (min-width: 480px) {\n\t\th1 {\n\t\t\tfont-size: 4em;\n\t\t}\n\t}\n</style>\n\n<svelte:head>\n\t<title>{status}</title>\n</svelte:head>\n\n<h1>{status}</h1>\n\n<p>{error.message}</p>\n\n{#if dev && error.stack}\n\t<pre>{error.stack}</pre>\n{/if}\n",
    "<script>\n  const onLogin = e => {\n    alert(\"invalid credentials\");\n  };\n</script>\n\n<style>\n  .flex {\n    display: flex;\n    background: red;\n  }\n\n  .xxyy {\n    color: green;\n  }\n</style>\n\n<h1 class=\"xxyy\">Hello World</h1>\n<div class=\"h-full flex bg-orange-100 p-0 m-0\">\n  <div\n    class=\"flex mx-auto my-auto bg-white rounded-lg shadow-lg lg:w-1/4 sm:w-1/2\n    md:-w-1/2 px-4 py-10\">\n    <div class=\"bg-white mx-auto\">\n      <div class=\"flex-1 text-gray-800 text-center px-4 py-2 m-2\">\n        Welcome to your Plutus Dashboard\n      </div>\n      <div class=\"flex-1 text-gray-500 text-left py-2 m-2\">\n        Your credentials\n      </div>\n\n      <form class=\"flex px-1 py-1 flex-col\">\n        <input\n          class=\"bg-white focus:outline-0 focus:shadow-outline border\n          border-gray-300 rounded-lg py-2 px-4 block w-full appearance-none\n          leading-normal\"\n          type=\"text\"\n          placeholder=\"username\" />\n        <input\n          class=\"bg-white focus:outline-0 focus:shadow-outline border\n          border-gray-300 rounded-lg py-2 px-4 block w-full appearance-none\n          leading-normal my-4\"\n          type=\"password\"\n          placeholder=\"password\" />\n        <button\n          on:click={onLogin}\n          class=\"bg-teal-500 hover:bg-teal-800 text-white font-bold py-2 px-6\n          rounded-lg border-none mt-4\">\n          ENTER\n        </button>\n\n      </form>\n    </div>\n  </div>\n</div>\n",
    "<script context=\"module\">\n\texport function preload({ params, query }) {\n\t\treturn this.fetch(`blog.json`).then(r => r.json()).then(posts => {\n\t\t\treturn { posts };\n\t\t});\n\t}\n</script>\n\n<script>\n\texport let posts;\n</script>\n\n<style>\n\tul {\n\t\tmargin: 0 0 1em 0;\n\t\tline-height: 1.5;\n\t}\n</style>\n\n<svelte:head>\n\t<title>Blog</title>\n</svelte:head>\n\n<h1>Recent posts</h1>\n\n<ul>\n\t{#each posts as post}\n\t\t<!-- we're using the non-standard `rel=prefetch` attribute to\n\t\t\t\ttell Sapper to load the data for the page as soon as\n\t\t\t\tthe user hovers over the link or taps it, instead of\n\t\t\t\twaiting for the 'click' event -->\n\t\t<li><a rel='prefetch' href='blog/{post.slug}'>{post.title}</a></li>\n\t{/each}\n</ul>",
    "<script context=\"module\">\n  export async function preload({ params, query }) {\n    // the `slug` parameter is available because\n    // this file is called [slug].html\n    const res = await this.fetch(`blog/${params.slug}.json`);\n    const data = await res.json();\n\n    if (res.status === 200) {\n      return { post: data };\n    } else {\n      this.error(res.status, data.message);\n    }\n  }\n</script>\n\n<script>\n  export let post;\n</script>\n\n<style>\n  .content :global(h2) {\n    font-size: 1.4em;\n    font-weight: 500;\n  }\n\n  .content :global(pre) {\n    background-color: #f9f9f9;\n    box-shadow: inset 1px 1px 5px rgba(0, 0, 0, 0.05);\n    padding: 0.5em;\n    border-radius: 2px;\n    overflow-x: auto;\n  }\n\n  .content :global(pre) :global(code) {\n    background-color: transparent;\n    padding: 0;\n  }\n\n  .content :global(ul) {\n    line-height: 1.5;\n  }\n\n  .content :global(li) {\n    margin: 0 0 0.5em 0;\n  }\n</style>\n\n<svelte:head>\n  <title>{post.title}</title>\n</svelte:head>\n\n<h1>{post.title}</h1>\n\n<div class=\"content\">\n  {@html post.html}\n</div>\n"
  ],
  "names": [],
  "mappings": "AAME,IAAI,cAAC,CAAC,AACJ,QAAQ,CAAE,QAAQ,CAClB,SAAS,CAAE,IAAI,CACf,gBAAgB,CAAE,KAAK,CACvB,OAAO,CAAE,GAAG,CACZ,MAAM,CAAE,CAAC,CAAC,IAAI,CACd,UAAU,CAAE,UAAU,AACxB,CAAC;ACLF,gBAAE,CAAE,CAAC,cAAC,CAAC,AACN,MAAM,CAAE,CAAC,CAAC,IAAI,AACf,CAAC,AAED,EAAE,cAAC,CAAC,AACH,SAAS,CAAE,KAAK,CAChB,WAAW,CAAE,GAAG,CAChB,MAAM,CAAE,CAAC,CAAC,CAAC,CAAC,KAAK,CAAC,CAAC,AACpB,CAAC,AAED,CAAC,cAAC,CAAC,AACF,MAAM,CAAE,GAAG,CAAC,IAAI,AACjB,CAAC,AAED,MAAM,AAAC,YAAY,KAAK,CAAC,AAAC,CAAC,AAC1B,EAAE,cAAC,CAAC,AACH,SAAS,CAAE,GAAG,AACf,CAAC,AACF,CAAC;ACnBA,KAAK,cAAC,CAAC,AACL,OAAO,CAAE,IAAI,CACb,UAAU,CAAE,GAAG,AACjB,CAAC,AAED,KAAK,cAAC,CAAC,AACL,KAAK,CAAE,KAAK,AACd,CAAC;ACDF,EAAE,eAAC,CAAC,AACH,MAAM,CAAE,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CACjB,WAAW,CAAE,GAAG,AACjB,CAAC;ACIA,uBAAQ,CAAC,AAAQ,EAAE,AAAE,CAAC,AACpB,SAAS,CAAE,KAAK,CAChB,WAAW,CAAE,GAAG,AAClB,CAAC,AAED,uBAAQ,CAAC,AAAQ,GAAG,AAAE,CAAC,AACrB,gBAAgB,CAAE,OAAO,CACzB,UAAU,CAAE,KAAK,CAAC,GAAG,CAAC,GAAG,CAAC,GAAG,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,CACjD,OAAO,CAAE,KAAK,CACd,aAAa,CAAE,GAAG,CAClB,UAAU,CAAE,IAAI,AAClB,CAAC,AAED,uBAAQ,CAAC,AAAQ,GAAG,AAAC,CAAC,AAAQ,IAAI,AAAE,CAAC,AACnC,gBAAgB,CAAE,WAAW,CAC7B,OAAO,CAAE,CAAC,AACZ,CAAC,AAED,uBAAQ,CAAC,AAAQ,EAAE,AAAE,CAAC,AACpB,WAAW,CAAE,GAAG,AAClB,CAAC,AAED,uBAAQ,CAAC,AAAQ,EAAE,AAAE,CAAC,AACpB,MAAM,CAAE,CAAC,CAAC,CAAC,CAAC,KAAK,CAAC,CAAC,AACrB,CAAC"
}